{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./dotless.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","from","to","step","current","directionFactor","convertor","source","item","seed","last","predicate","callback","initialValue","accumulator","currentIndex","_","fetched","comparer","mutuallyExclusive","thisIndex","length","thatIndex","toArray","Array","chain","reduce","a","f","b","aValue","Function","bValue","compareFns","sorter","result","compareFn","array","sort","str","regex","exec","index","lastIndex","push","String","undefined","x","input","countOfItems","action","iterator","base"],"mappings":"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","file":"dotless.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"dotless\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dotless\"] = factory();\n\telse\n\t\troot[\"dotless\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export function* range(from: number, to: number, step = 1) {\r\n    let current = from;\r\n    if (step === 0) {\r\n        return;\r\n    }\r\n    const directionFactor = step > 0 ? 1 : -1;\r\n    while ((to - current) * directionFactor >= 0) {\r\n        yield current;\r\n        current = current + step;\r\n    }\r\n}\r\n\r\nexport function map<TSource, TResult>(convertor: (item: TSource) => TResult) {\r\n    return function*(source: Iterable<TSource>) {\r\n        for (const item of source) {\r\n            yield convertor(item);\r\n        }\r\n    };\r\n}\r\n\r\nexport function mapMany<TSource, TResult>(\r\n    convertor: (item: TSource) => IterableIterator<TResult>\r\n) {\r\n    return function*(source: Iterable<TSource>) {\r\n        for (const item of source) {\r\n            yield* convertor(item);\r\n        }\r\n    };\r\n}\r\n\r\nexport function mapWithLast<TSource, TResult>(\r\n    convertor: (last: TResult, item: TSource) => TResult,\r\n    seed: TResult\r\n) {\r\n    return function*(source: Iterable<TSource>) {\r\n        let last = seed;\r\n        for (const item of source) {\r\n            last = convertor(last, item);\r\n            yield last;\r\n        }\r\n    };\r\n}\r\n\r\nexport function filter<TSource>(predicate: (item: TSource) => boolean) {\r\n    return function*(source: Iterable<TSource>) {\r\n        for (const item of source) {\r\n            if (predicate(item)) {\r\n                yield item;\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport function reduce<TSource, TResult>(\r\n    callback: (accumulator: TResult, item: TSource, index: number) => TResult,\r\n    initialValue: TResult\r\n) {\r\n    return (source: Iterable<TSource>): TResult => {\r\n        let accumulator = initialValue;\r\n        let currentIndex = 0;\r\n        for (const item of source) {\r\n            accumulator = callback(accumulator, item, currentIndex++);\r\n        }\r\n        return accumulator;\r\n    };\r\n}\r\n\r\nexport function any<TSource>(\r\n    predicate: (item: TSource) => boolean = _ => true\r\n) {\r\n    return (source: Iterable<TSource>): boolean => {\r\n        for (const item of source) {\r\n            if (predicate(item)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n}\r\n\r\nexport function first<TSource>(\r\n    predicate: (item: TSource) => boolean = _ => true\r\n) {\r\n    return (source: Iterable<TSource>): TSource | null => {\r\n        for (const item of source) {\r\n            if (predicate(item)) {\r\n                return item;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nexport function take<TSource>(n: number) {\r\n    return function*(source: Iterable<TSource>) {\r\n        let fetched = 0;\r\n        if (n < 1) {\r\n            return;\r\n        }\r\n        for (const item of source) {\r\n            yield item;\r\n            if (++fetched === n) {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport function findPairs<TSource>(\r\n    comparer: (a: TSource, b: TSource) => boolean,\r\n    mutuallyExclusive = false\r\n) {\r\n    return function*(\r\n        source: TSource[]\r\n    ): Iterable<[TSource, TSource, number, number]> {\r\n        for (let thisIndex = 0; thisIndex < source.length; thisIndex++) {\r\n            for (\r\n                let thatIndex = mutuallyExclusive ? 0 : thisIndex + 1;\r\n                thatIndex < source.length;\r\n                thatIndex++\r\n            ) {\r\n                if (\r\n                    thatIndex !== thisIndex &&\r\n                    comparer(source[thisIndex], source[thatIndex])\r\n                ) {\r\n                    yield [\r\n                        source[thisIndex],\r\n                        source[thatIndex],\r\n                        thisIndex,\r\n                        thatIndex\r\n                    ];\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport const toArray = Array.from;\r\n\r\nexport function query<T1, T2>(a: T1, b: (arg: T1) => T2): T2;\r\nexport function query<T1, T2, T3>(\r\n    a: T1,\r\n    b: (arg: T1) => T2,\r\n    c: (arg: T2) => T3\r\n): T3;\r\nexport function query<T1, T2, T3, T4>(\r\n    a: T1,\r\n    b: (arg: T1) => T2,\r\n    c: (arg: T2) => T3,\r\n    d: (arg: T3) => T4\r\n): T4;\r\nexport function query<T1, T2, T3, T4, T5>(\r\n    a: T1,\r\n    b: (arg: T1) => T2,\r\n    c: (arg: T2) => T3,\r\n    d: (arg: T3) => T4,\r\n    e: (arg: T4) => T5\r\n): T5;\r\nexport function query<T1, T2, T3, T4, T5, T6>(\r\n    a: T1,\r\n    b: (arg: T1) => T2,\r\n    c: (arg: T2) => T3,\r\n    d: (arg: T3) => T4,\r\n    e: (arg: T4) => T5,\r\n    f: (arg: T5) => T6\r\n): T6;\r\nexport function query<T1, T2, T3, T4, T5, T6, T7>(\r\n    a: T1,\r\n    b: (arg: T1) => T2,\r\n    c: (arg: T2) => T3,\r\n    d: (arg: T3) => T4,\r\n    e: (arg: T4) => T5,\r\n    f: (arg: T5) => T6,\r\n    g: (arg: T6) => T7\r\n): T7;\r\nexport function query<T1, T2, T3, T4, T5, T6, T7, T8>(\r\n    a: T1,\r\n    b: (arg: T1) => T2,\r\n    c: (arg: T2) => T3,\r\n    d: (arg: T3) => T4,\r\n    e: (arg: T4) => T5,\r\n    f: (arg: T5) => T6,\r\n    g: (arg: T6) => T7,\r\n    h: (arg: T7) => T8\r\n): T8;\r\nexport function query<T1, T2, T3, T4, T5, T6, T7, T8, T9>(\r\n    a: T1,\r\n    b: (arg: T1) => T2,\r\n    c: (arg: T2) => T3,\r\n    d: (arg: T3) => T4,\r\n    e: (arg: T4) => T5,\r\n    f: (arg: T5) => T6,\r\n    g: (arg: T6) => T7,\r\n    h: (arg: T7) => T8,\r\n    i: (arg: T8) => T9\r\n): T9;\r\nexport function query<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(\r\n    a: T1,\r\n    b: (arg: T1) => T2,\r\n    c: (arg: T2) => T3,\r\n    d: (arg: T3) => T4,\r\n    e: (arg: T4) => T5,\r\n    f: (arg: T5) => T6,\r\n    g: (arg: T6) => T7,\r\n    h: (arg: T7) => T8,\r\n    i: (arg: T8) => T9,\r\n    j: (arg: T9) => T10\r\n): T10;\r\nexport function query(...chain: any[]) {\r\n    return chain.reduce((a, f) => f(a));\r\n}\r\n\r\nexport function ascendingBy<T>(property: keyof T | ((obj: T) => any) = _ => _) {\r\n    return (a: T, b: T) => {\r\n        const aValue = property instanceof Function ? property(a) : a[property];\r\n        const bValue = property instanceof Function ? property(b) : b[property];\r\n        if (aValue > bValue) {\r\n            return 1;\r\n        } else if (aValue === bValue) {\r\n            return 0;\r\n        } else {\r\n            return -1;\r\n        }\r\n    };\r\n}\r\n\r\nexport function descendingBy<T>(\r\n    property: keyof T | ((obj: T) => any) = _ => _\r\n) {\r\n    return (a: T, b: T) => {\r\n        const aValue = property instanceof Function ? property(a) : a[property];\r\n        const bValue = property instanceof Function ? property(b) : b[property];\r\n        if (aValue > bValue) {\r\n            return -1;\r\n        } else if (aValue === bValue) {\r\n            return 0;\r\n        } else {\r\n            return 1;\r\n        }\r\n    };\r\n}\r\n\r\nexport function sort<T>(...compareFns: Array<(a: T, b: T) => -1 | 0 | 1>) {\r\n    const sorter = (a: T, b: T) => {\r\n        let result = 0;\r\n        for (const compareFn of compareFns) {\r\n            result = compareFn(a, b);\r\n            if (result !== 0) {\r\n                return result;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    return <U extends T>(array: U[]) => array.sort(sorter);\r\n}\r\n\r\nexport function matchesToArray<T = RegExpExecArray>(\r\n    str: string,\r\n    regex: RegExp,\r\n    convertor: (x: RegExpExecArray) => T = _ => (_ as unknown) as T\r\n) {\r\n    let m = regex.exec(str);\r\n    const result: T[] = [];\r\n    while (m !== null) {\r\n        /* istanbul ignore next */\r\n        if (m.index === regex.lastIndex) {\r\n            regex.lastIndex++;\r\n        }\r\n        result.push(convertor(m));\r\n        m = regex.exec(str);\r\n    }\r\n    return result;\r\n}\r\n\r\ninterface Dictionary<T> {\r\n    [key: string]: T;\r\n}\r\n\r\nexport function groupBy<TSource>(\r\n    property: keyof TSource | ((obj: TSource) => string)\r\n) {\r\n    return (source: Iterable<TSource>) => {\r\n        const result: Dictionary<TSource[]> = {};\r\n        for (const item of source) {\r\n            const key = String(\r\n                property instanceof Function ? property(item) : item[property]\r\n            );\r\n            result[key] = result[key] === undefined ? [] : result[key];\r\n            result[key].push(item);\r\n        }\r\n        return result;\r\n    };\r\n}\r\n\r\nexport function countBy<TSource>(\r\n    property: keyof TSource | ((obj: TSource) => string) = x => String(x)\r\n) {\r\n    return (source: Iterable<TSource>) => {\r\n        const result: Dictionary<number> = {};\r\n        for (const item of source) {\r\n            const key = String(\r\n                property instanceof Function ? property(item) : item[property]\r\n            );\r\n            result[key] = (result[key] === undefined ? 0 : result[key]) + 1;\r\n        }\r\n        return result;\r\n    };\r\n}\r\n\r\nexport function* cycle<T>(input: Iterable<T>) {\r\n    while (true) {\r\n        yield* input;\r\n    }\r\n}\r\n\r\nexport function count<TSource>(\r\n    predicate: (item: TSource) => boolean = _ => true\r\n) {\r\n    return (source: Iterable<TSource>) => {\r\n        let countOfItems = 0;\r\n        for (const item of source) {\r\n            if (predicate(item)) {\r\n                countOfItems = countOfItems + 1;\r\n            }\r\n        }\r\n        return countOfItems;\r\n    };\r\n}\r\n\r\nexport function each<TSource>(action: (item: TSource) => void) {\r\n    return function*(source: Iterable<TSource>) {\r\n        for (const item of source) {\r\n            action(item);\r\n            yield item;\r\n        }\r\n    };\r\n}\r\n\r\nexport function* iterate<T>(iterator: (current: T) => T, base: T) {\r\n    let current = base;\r\n    yield current;\r\n    while (true) {\r\n        current = iterator(current);\r\n        yield current;\r\n    }\r\n}\r\n"],"sourceRoot":""}